{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/collection-stream-for-each-와-collection-for-each-의-차이점","result":{"data":{"post":{"__typename":"MdxPost","slug":"/collection-stream-for-each-와-collection-for-each-의-차이점","title":"Collection.stream.forEach() 와 Collection.forEach()의 차이점","date":"02.07.2020","tags":[{"name":"java","slug":"java"},{"name":"collection","slug":"collection"},{"name":"foreach","slug":"foreach"}],"description":null,"canonicalUrl":null,"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Collection.stream.forEach() 와 Collection.forEach()의 차이점\",\n  \"date\": \"2020-07-02T00:00:00.000Z\",\n  \"tags\": [\"java\", \"collection\", \"foreach\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uC774 \\uAE00\\uC740 \", \"[https://www.baeldung.com/java-collection-stream-foreach]\", \"(baedung \\uB9C1\\uD06C)\\uC758 \\uB0B4\\uC6A9\\uC744 \\uBC88\\uC5ED\\uD55C \\uB0B4\\uC6A9\\uC784\\uC744 \\uBC1D\\uD799\\uB2C8\\uB2E4. \\uBB38\\uC81C\\uAC00 \\uB420 \\uC2DC \\uC0AD\\uC81C\\uD558\\uACA0\\uC2B5\\uB2C8\\uB2E4. \")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"This post is mostly based on \", \"[https://www.baeldung.com/java-collection-stream-foreach]\", \". \"))), mdx(\"h2\", null, \"1. \\uB3C4\\uC785\"), mdx(\"p\", null, \" \\uC790\\uBC14 collection\\uC744 iteration\\uD560 \\uC218 \\uC788\\uB294 \\uBC29\\uBC95\\uC740 \\uC5EC\\uB7EC\\uAC00\\uC9C0\\uAC00 \\uC788\\uB2E4. \\uC774 \\uD29C\\uD1A0\\uB9AC\\uC5BC\\uC5D0\\uC11C\\uB294, \\uC720\\uC0AC\\uD574 \\uBCF4\\uC774\\uB294 \\uB450 \\uAC1C\\uC758 iteration \\uBC29\\uBC95\\uC744 \\uC54C\\uC544\\uBCFC \\uAC83\\uC774\\uB2E4 - Collection.stream().forEach()\\uC640 Collection.forEach()\\uC774\\uB2E4. \\uB300\\uBD80\\uBD84\\uC758 \\uACBD\\uC6B0\\uC5D0 \\uB450 \\uBC29\\uBC95\\uC740 \\uAC70\\uC758 \\uAC19\\uC740 \\uACB0\\uACFC\\uB97C \\uB9CC\\uB4E4\\uC5B4\\uB0B4\\uC9C0\\uB9CC, \\uC57D\\uAC04\\uC758 \\uBBF8\\uBB18\\uD55C \\uCC28\\uC774\\uAC00 \\uC788\\uB2E4.\"), mdx(\"h2\", null, \"2. \\uAC1C\\uAD04\"), mdx(\"p\", null, \" \\uBA3C\\uC800, iteration\\uD560 \\uB9AC\\uC2A4\\uD2B8\\uB97C \\uB9CC\\uB4E4\\uC5B4 \\uBCF4\\uC790.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-java\"\n  }), \"List<String> list = Arrays.asList(\\\"A\\\", \\\"B\\\", \\\"C\\\", \\\"D\\\");\\n\")), mdx(\"p\", null, \" \\uAC00\\uC7A5 \\uBA3C\\uC800 \\uB5A0\\uC62C\\uB9B4 \\uC218 \\uC788\\uB294 \\uBC29\\uBC95\\uC740 \\uD5A5\\uC0C1\\uB41C for-loop\\uC744 \\uC0AC\\uC6A9\\uD558\\uB294 \\uAC83\\uC774\\uB2E4.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-java\"\n  }), \"for(String s : list) {\\n    //do something with s\\n}\\n\")), mdx(\"p\", null, \" \\uD568\\uC218\\uD615 \\uC790\\uBC14\\uB97C(functional-style Java) \\uC0AC\\uC6A9\\uD558\\uACE0\\uC2F6\\uB2E4\\uBA74 forEach()\\uB97C \\uC0AC\\uC6A9\\uD574\\uB3C4 \\uB41C\\uB2E4. Collection\\uC5D0\\uC11C \\uBC14\\uB85C \\uC0AC\\uC6A9\\uD560 \\uC218 \\uC788\\uB2E4.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-java\"\n  }), \"Consumer<String> consumer = s -> { System.out::println }; \\nlist.forEach(consumer);\\n\")), mdx(\"p\", null, \" \\uC544\\uB2C8\\uBA74 collection\\uC758 stream\\uC5D0\\uC11C forEach()\\uB97C \\uC0AC\\uC6A9\\uD560 \\uC218\\uB3C4 \\uC788\\uB2E4.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-java\"\n  }), \"list.stream().forEach(consumer);\\n\")), mdx(\"p\", null, \" \\uB450 \\uBC29\\uBC95 \\uBAA8\\uB450 \\uB9AC\\uC2A4\\uD2B8\\uB97C iterate \\uD558\\uACE0 \\uBAA8\\uB4E0 \\uC6D0\\uC18C\\uB97C print \\uD55C\\uB2E4. \\uC774 \\uC608\\uC5D0\\uC11C\\uB294 \\uB450 forEach()\\uC758 \\uCC28\\uC774\\uAC00 \\uBCF4\\uC774\\uC9C0 \\uC54A\\uB294\\uB2E4.\"), mdx(\"h2\", null, \"3. \\uC2E4\\uD589 \\uC21C\\uC11C\"), mdx(\"p\", null, \" \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Collection.forEach()\\uB294 collection\\uC758 iterator\\uB97C \\uC0AC\\uC6A9\\uD558\\uB294\\uB370 \\uC774\\uAC8C \\uBB34\\uC2A8 \\uB9D0\\uC774\\uB0D0\\uBA74 \\uAC01 \\uD56D\\uBAA9\\uC758 \\uC2E4\\uD589 \\uC21C\\uC11C\\uAC00 \\uC815\\uD574\\uC838\\uC788\\uB2E4\\uB294 \\uB73B\\uC774\\uB2E4. \\uBC18\\uBA74\\uC5D0, Collection.stream().forEach()\\uC758 \\uCC98\\uB9AC \\uC21C\\uC11C\\uB294 \\uC54C \\uC218 \\uC5C6\\uB2E4.\")), mdx(\"p\", null, \" \\uB9CE\\uC740 \\uACBD\\uC6B0\\uC5D0\\uB294 \\uC5B4\\uB5A4 \\uBC29\\uBC95\\uC744 \\uD0DD\\uD574\\uB3C4 \\uCC28\\uC774\\uB294 \\uC5C6\\uB2E4.\"), mdx(\"h3\", null, \"3.1 Parallel Streams\"), mdx(\"p\", null, \" Parallel Streams\\uC744 \\uC774\\uC6A9\\uD558\\uBA74 \\uC5EC\\uB7EC \\uAC1C\\uC758 \\uC4F0\\uB808\\uB4DC\\uC5D0\\uC11C stream\\uC774 \\uC2E4\\uD589\\uB420 \\uC218 \\uC788\\uACE0, \\uADF8\\uB807\\uAC8C \\uB418\\uBA74 \\uC2E4\\uD589 \\uC21C\\uC11C\\uB294 \\uC54C \\uC218 \\uC5C6\\uAC8C \\uB41C\\uB2E4. \\uC790\\uBC14\\uB294 Collectors.toList()\\uC640 \\uAC19\\uC740 terminal operation\\uC774 \\uD638\\uCD9C\\uB418\\uAE30 \\uC804\\uC5D0 \\uADF8 \\uC4F0\\uB808\\uB4DC\\uB4E4\\uC774 \\uC885\\uB8CC \\uB418\\uB294 \\uAC83\\uB9CC \\uC694\\uAD6C\\uD560 \\uBFD0\\uC774\\uB2E4.\"), mdx(\"p\", null, \" \\uC544\\uB798 \\uC608\\uC2DC\\uB97C \\uBCF4\\uC790. \"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-java\"\n  }), \"list.forEach(System.out::print);\\nSystem.out.print(\\\" \\\");\\nlist.parallelStream().forEach(System.out::print);\\n\")), mdx(\"p\", null, \" \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"\\uC774 \\uCF54\\uB4DC\\uB97C \\uC5EC\\uB7EC \\uBC88 \\uC2E4\\uD589\\uD558\\uBA74, list.forEach()\\uB294 \\uC0BD\\uC785\\uB41C \\uC21C\\uC11C\\uB300\\uB85C \\uCC98\\uB9AC \\uD558\\uC9C0\\uB9CC list.parallelStream.forEach()\\uB294 \\uC2E4\\uD589\\uD560 \\uB54C \\uB9C8\\uB2E4 \\uCC98\\uB9AC \\uC21C\\uC11C\\uAC00 \\uB2EC\\uB77C\\uC9C0\\uB294 \\uAC83\\uC744 \\uBCFC \\uC218 \\uC788\\uB2E4.\")), mdx(\"p\", null, \" \\uC608\\uB97C \\uB4E4\\uC5B4 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \" ABCD CDBA\"), \"\\uC640 \\uAC19\\uC740 \\uACB0\\uACFC\\uB97C \\uB0BC \\uC218\\uB3C4 \\uC788\\uACE0 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ABCD DBCA\"), \"\\uC640 \\uAC19\\uC740 \\uACB0\\uACFC\\uB97C \\uB0BC \\uC218\\uB3C4 \\uC788\\uB2E4.\"));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"이 글은  https://www.baeldung.com/java-collection-stream-foreach (baedung 링크)의 내용을 번역한 내용임을 밝힙니다. 문제가 될 시 삭제하겠습니다.  This post is mostly based…","timeToRead":1,"banner":null}},"pageContext":{"slug":"/collection-stream-for-each-와-collection-for-each-의-차이점","formatString":"DD.MM.YYYY"}},"staticQueryHashes":["3090400250","3090400250","318001574"]}